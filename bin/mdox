#!/usr/bin/env node

var util = require('util');
var mdox = require('..');
var cli = require('cli').enable('help', 'version', 'status');

cli.setApp('mdox', '0.0.2');

cli.parse({
    format: ['f', 'Parse output format', ['json', 'md', 'html']],
    pretty: [false, 'JSON pretty print'],
    output: ['o', 'Write to FILE rather than the console', 'file'],
    cwd: ['c', 'The current working directory in which to search.', 'dir']
}, [ 'generate', 'parse' ]);


cli.main(function(args, options) {
    switch (this.command) {
        case 'generate':
            mdox.docGenerate(options.cwd || './');
            break;

        case 'parse':
            parse.call(this, args, options);
            break;
    }
});

function parse(args, options) {
    this.withStdin(function(str) {
        var stream;
        var output = '';

        switch (options.format) {
            case 'md':
                output = mdox.mdGenerate(str);
                break;

            case 'html':
                output = mdox.htmlGenerate(str);
                break;

            case 'json':
            default:
                output = mdox.jsonGenerate(str);
                if (options.pretty) {
                    output = util.inspect(output, {
                        showHidden: false,
                        depth: Infinity,
                        colors: true
                    }) + '\n';

                } else {
                    output = JSON.stringify(output, null, 4);
                }
        }

        try {
            if (options.output) {
                stream = this.native.fs.createWriteStream(options.output);

            } else {
                stream = process.stdout;
            }

            stream.write(output);

        } catch (e) {
            this.fatal('Could not write to output stream');
        }
    });
}


